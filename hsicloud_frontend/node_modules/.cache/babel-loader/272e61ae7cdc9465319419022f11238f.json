{"remainingRequest":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\学习\\源码\\CBIR\\hsicloud_frontend\\src\\router\\index.js","dependencies":[{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\src\\router\\index.js","mtime":1603068780874},{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}