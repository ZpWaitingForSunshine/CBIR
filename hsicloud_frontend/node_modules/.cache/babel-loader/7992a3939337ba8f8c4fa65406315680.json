{"remainingRequest":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\学习\\源码\\CBIR\\hsicloud_frontend\\src\\components\\ImageCropper\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\src\\components\\ImageCropper\\index.vue","mtime":1593408648000},{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}