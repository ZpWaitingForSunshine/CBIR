{"remainingRequest":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\学习\\源码\\CBIR\\hsicloud_frontend\\src\\views\\dashboard\\admin\\components\\PanelGroup.vue?vue&type=template&id=48c369af&scoped=true&","dependencies":[{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\src\\views\\dashboard\\admin\\components\\PanelGroup.vue","mtime":1593408648000},{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\学习\\源码\\CBIR\\hsicloud_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}